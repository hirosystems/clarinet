[package]
name = "clarinet-cli"
version = "1.4.2"
authors = ["Ludo Galabru <ludo@hiro.so>", "Brice Dobry <brice@hiro.so>"]
edition = "2021"
description = "Clarinet is a simple, modern and opinionated runtime for testing, integrating and deploying Clarity smart contracts."
readme = "README.md"
license = "GPL-3.0"
keywords = ["blockstack", "blockchain", "clarity", "smart-contract", "repl"]
exclude = ["examples/**"]
homepage = "https://github.com/hirosystems/clarinet"
repository = "https://github.com/hirosystems/clarinet"
categories = [
    "command-line-utilities",
    "development-tools",
    "development-tools::build-utils",
]

[target.'cfg(windows)'.build-dependencies]
winapi = "0.3.9"
winres = "0.1.11"

[build-dependencies]
deno_broadcast_channel = { version = "0.58.0" }
deno_console = { version = "0.64.0" }
deno_core = { version = "0.146.0" }
deno_crypto = { version = "0.78.0" }
deno_fetch = { version = "0.87.0" }
deno_net = { version = "0.56.0" }
deno_url = { version = "0.64.0" }
deno_web = { version = "0.95.0" }
deno_websocket = { version = "0.69.0" }
deno_webstorage = { version = "0.59.0" }
deno_webidl = { version = "0.64.0" }
deno_tls = { version = "0.51.0" }
deno_http = { version = "0.58.0" }
regex = "1.7"
serde = { version = "1.0.136", features = ["derive"] }
lzzzz = '1.0'

[dependencies]
clap = { version = "3.2.23", features = ["derive"], optional = true }
clap_generate = { version = "3.0.3", optional = true }
toml = { version = "0.5.6", features = ["preserve_order"] }
serde = { version = "1.0.136", features = ["derive"] }
serde_json = { version = "1.0.79", features = ["preserve_order"] }
serde_derive = "1"
deno_emit = { version = "0.4.0", optional = true }
deno_graph = { version = "0.29.0", optional = true }
deno_core = { version = "0.146.0", optional = true }
deno_ast = { version = "0.17.0", features = ["cjs"], optional = true }
deno_tls = { version = "0.51.0", optional = true }
deno_web = { version = "0.95.0", optional = true }
deno_ops = { version = "0.24.0", optional = true }
deno_net = { version = "0.56.0", optional = true }
deno_url = { version = "0.64.0", optional = true }
lzzzz = '1.0'
### To eliminate
deno_console = { version = "0.64.0", optional = true }
deno_webstorage = { version = "0.59.0", optional = true }
deno_broadcast_channel = { version = "0.58.0", optional = true }
hyper = { version = "0.14.18", features = [
    "server",
    "stream",
    "http1",
    "http2",
    "runtime",
] }
http = "0.2.6"
###
rsa = "=0.7.0-pre"
deno_fetch = { version = "0.87.0", optional = true }
deno_crypto = { version = "0.78.0", optional = true }
import_map = { version = "=0.12.1", optional = true }
once_cell = { version = "1.13.0", optional = true }
walkdir = { version = "=2.3.2", optional = true }
node_resolver = { version = "0.1.1", optional = true }
cache_control = { version = "=0.2.0", optional = true }
notify = "=5.0.0-pre.7"
dlopen = { version = "0.1.8", optional = true }
log = { version = "=0.4.17", features = ["serde"] }
filetime = "0.2.16"
mitata = '=0.0.7'
env_logger = "=0.9.0"
fs3 = "0.5.0"
typed-arena = "2.0.1"
sys-info = "0.9.1"
zstd = '=0.11.1'
semver-parser = "=0.10.2"
netif = "0.1.3"
dprint-plugin-json = "=0.15.4"
dprint-plugin-markdown = "=0.13.3"
dprint-plugin-typescript = "=0.71.1"
signal-hook-registry = "1.4.0"
text_lines = "=0.6.0"
secure_tempfile = { version = "=3.3.0", package = "tempfile" }
jsonc-parser = { version = "=0.20.0", features = ["serde"] }
twox-hash = "1.6.3"
data-url = "=0.1.1"
os_pipe = "1.0.1"
tokio-util = { version = "0.7.1", features = ["io"], optional = true }
clarity_repl = { package = "clarity-repl", path = "../clarity-repl", features = [
    "cli",
] }
aes = "0.7.5"
base64 = "0.13.0"
block-modes = "0.8.1"
rand = "0.8.3"
ring = "0.16.20"
libsecp256k1 = "0.7.0"
uuid = { version = "=1.0.0", features = ["v4", "serde"] }
hmac = "0.12.0"
pbkdf2 = { version = "0.11.0", features = ["simple"], default-features = false }
futures = "0.3.12"
tokio = { version = "1.24", features = ["full"] }
lazy_static = "1.4.0"
atty = "0.2.14"
termcolor = "1.1.2"
text-size = "=1.1.0"
regex = "1.7"
libc = "0.2.86"
encoding_rs = "0.8.31"
percent-encoding = "2.1.0"
pin-project = "1.0.5"
indexmap = { version = "1.6.1", features = ["serde"] }
shell-escape = "0.1.5"
reqwest = { version = "0.11", default-features = false, features = [
    "blocking",
    "json",
    "rustls-tls",
] }
crossterm = "0.22.1"
base58 = "0.2.0"
ctrlc = "3.1.9"
strum = { version = "0.23.0", features = ["derive"] }
bitcoin = "0.29.2"
tiny-hderive = "0.3.0"
segment = { version = "0.1.2", optional = true }
mac_address = { version = "1.1.2", optional = true }
tower-lsp = { version = "0.18.0", optional = true }
hex = "0.4.3"
serde_yaml = "0.8.23"
chainhook-types = "=1.0.1"
# chainhook-types = { version = "=1.0.1", path = "../../../chainhook/components/chainhook-types-rs" }
clarinet-files = { path = "../clarinet-files", features = ["cli"] }
clarity-lsp = { path = "../clarity-lsp", features = ["cli"] }
clarinet-deployments = { path = "../clarinet-deployments", features = ["cli"] }
hiro-system-kit = { path = "../hiro-system-kit" }
clarinet-utils = { path = "../clarinet-utils" }
stacks-network = { path = "../stacks-network" }
num_cpus = "1.13.1"
mio = "0.8"
similar = "2.1.0"
crossbeam-channel = "0.5.6"
chrono = "0.4.20"
sha2 = "0.10.0"
ansi_term = "0.12.1"

[dependencies.tui]
version = "0.18.0"
default-features = false
features = ["crossterm"]

[target.'cfg(unix)'.dependencies]
nix = "=0.24.2"

[target.'cfg(windows)'.dependencies]
fwdansi = "1.1.0"
winapi = { version = "0.3.9", features = [
    "knownfolders",
    "mswsock",
    "objbase",
    "shlobj",
    "tlhelp32",
    "winbase",
    "winerror",
    "winsock2",
    "std",
    "handleapi",
    "ws2ipdef",
    "ws2tcpip",
] }

[package.metadata.winres]
OriginalFilename = "clarinet.exe"
LegalCopyright = ""
ProductName = "Clarinet"
FileDescription = ""

[lib]
name = "clarinet_lib"
path = "src/lib.rs"
crate-type = ["lib"]

[[bin]]
name = "clarinet"
path = "src/bin.rs"

[features]
default = ["cli", "telemetry"]
cli = [
    "deno_emit",
    "deno_graph",
    "deno_core",
    "deno_ast",
    "deno_tls",
    "deno_fetch",
    "deno_web",
    "deno_crypto",
    "deno_ops",
    "deno_net",
    "deno_url",
    "deno_console",
    "deno_webstorage",
    "deno_broadcast_channel",
    "dlopen",
    "import_map",
    "once_cell",
    "node_resolver",
    "cache_control",
    "walkdir",
    "tokio-util",
    "clap",
    "clap_generate",
    "tower-lsp",
]
telemetry = ["segment", "mac_address"]
